/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get Journal credit  account and debit > return correct balances after credit and debit 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 12000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 11000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 12000,
      "debit": 1000,
      "rownum": 1,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get Journal credit in account of 1st customer and debit for second customer > return correct balances after credit in account of 1st customer and debit for second customer 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 12000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 11000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 13000,
      "debitAmount": 0,
      "debitNew": 1000,
      "newBalance": 12000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 10000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 9000,
      "oldBalance": 10000,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 2,
      "splitId": "789456",
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 12000,
      "availableBalance": 12000,
      "availableCredit": 12000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
    Object {
      "actualBalance": 9000,
      "availableBalance": 9000,
      "availableCredit": 9000,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 13000,
      "debit": 1000,
      "rownum": 1,
      "subAccountType": "noSub",
    },
    Object {
      "credit": 10000,
      "debit": 1000,
      "rownum": 2,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get Journal update check of first customer main account > return correct balances 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get journal after credit in first account and debit for second account > return correct balances after credit in first account and debit for second account 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": -1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 2,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
    Object {
      "actualBalance": -1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "noSub",
    },
    Object {
      "credit": 0,
      "debit": 1000,
      "rownum": 2,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get journal after reverse credit in first account and debit for second account > return correct balances after reverse credit in first account and debit for second account 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 10000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": -1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 1000,
      "debitAmount": 0,
      "debitNew": 1000,
      "newBalance": 0,
      "oldBalance": -1000,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": "1478",
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": true,
      "rownum": 1,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 2,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": true,
      "rownum": 2,
      "splitId": "36987",
      "subAccountType": "noSub",
      "transferId": "1478",
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 1000,
      "rownum": 1,
      "subAccountType": "noSub",
    },
    Object {
      "credit": 1000,
      "debit": 1000,
      "rownum": 2,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get journal after update negative balance in 3rd customer account > return correct balances after update negative balance in 3rd customer account 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 10000,
      "debitAmount": 11000,
      "debitNew": 11000,
      "newBalance": -1000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 11000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": -1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 10000,
      "debit": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get journal after update one negative and one positive > return correct balances after update one negative and one positive 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 10000,
      "debitAmount": 11000,
      "debitNew": 11000,
      "newBalance": -1000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 2000,
      "creditNew": 12000,
      "debitAmount": 0,
      "debitNew": 11000,
      "newBalance": 1000,
      "oldBalance": -1000,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 11000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 2000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 1000,
      "availableBalance": 1000,
      "availableCredit": 1000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 12000,
      "debit": 11000,
      "rownum": 1,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalMainAccount client tests ledgerTest.account.getBalance // Get journal before update check for main account > return correct balances 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [],
  "mainBalance": Array [
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 10000,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "noSub",
    },
    Object {
      "credit": 10000,
      "debit": 0,
      "rownum": 2,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal after add debit in blocked account and credit in available > return correct balances after debit in blocked account and credit in available 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 10000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 2000,
      "newBalance": 9000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 12000,
      "debitAmount": 0,
      "debitNew": 2000,
      "newBalance": 10000,
      "oldBalance": 9000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 1000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 1000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 0,
      "oldBalance": 1000,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "15991",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 2,
      "splitId": "1599",
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 2,
      "splitId": "1599",
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "blocked",
    },
    Object {
      "actualBalance": 11000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 3,
      "seizableCredit": 1000,
      "seizedBalance": 1000,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 12000,
      "debit": 2000,
      "rownum": 1,
      "subAccountType": "available",
    },
    Object {
      "credit": 1000,
      "debit": 1000,
      "rownum": 2,
      "subAccountType": "blocked",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal after debit in seized account and credit in available > return correct balances after debit in seized account and credit in available 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 10000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 2000,
      "newBalance": 9000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 12000,
      "debitAmount": 0,
      "debitNew": 2000,
      "newBalance": 10000,
      "oldBalance": 9000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 13000,
      "debitAmount": 0,
      "debitNew": 2000,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "seized",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 1000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "seized",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 1000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 0,
      "oldBalance": 1000,
      "rownum": 2,
      "subAccountType": "seized",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "15991",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": "15991",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 2,
      "splitId": "15991",
      "subAccountType": "seized",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 2,
      "splitId": "15991",
      "subAccountType": "seized",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "seized",
    },
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 3,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 13000,
      "debit": 2000,
      "rownum": 1,
      "subAccountType": "available",
    },
    Object {
      "credit": 1000,
      "debit": 1000,
      "rownum": 2,
      "subAccountType": "seized",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal credit in blocked account and debit in available > return correct balances after credit and debit 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 10000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 1000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 2,
      "splitId": "1599",
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 1000,
      "availableBalance": 1000,
      "availableCredit": 1000,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "blocked",
    },
    Object {
      "actualBalance": 11000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 1000,
      "rownum": 3,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 1000,
      "rownum": 1,
      "subAccountType": "available",
    },
    Object {
      "credit": 1000,
      "debit": 0,
      "rownum": 2,
      "subAccountType": "blocked",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal credit in seized account and debit in available > return correct balances after credit and debit 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 1000,
      "newBalance": 10000,
      "oldBalance": 11000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 11000,
      "debitAmount": 1000,
      "debitNew": 2000,
      "newBalance": 9000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "seized",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 1000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 1000,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "seized",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "1599",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "debitAmount": 1000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": "15991",
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 2,
      "splitId": "15991",
      "subAccountType": "seized",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 9000,
      "availableBalance": 9000,
      "availableCredit": 9000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 1000,
      "availableBalance": 1000,
      "availableCredit": 1000,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "seized",
    },
    Object {
      "actualBalance": 11000,
      "availableBalance": 9000,
      "availableCredit": 9000,
      "blockedBalance": 1000,
      "rownum": 3,
      "seizableCredit": 1000,
      "seizedBalance": 1000,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 2000,
      "rownum": 1,
      "subAccountType": "available",
    },
    Object {
      "credit": 1000,
      "debit": 0,
      "rownum": 2,
      "subAccountType": "seized",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal first customer to second > return correct balances after credit in blocked account of 1st customer and debit in available for second customer 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 2,
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 3,
      "subAccountType": "noSub",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 3,
      "subAccountType": "noSub",
      "transferId": null,
    },
  ],
  "journal": Array [],
  "mainBalance": Array [
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "blocked",
    },
    Object {
      "actualBalance": 10000,
      "availableBalance": 10000,
      "availableCredit": 10000,
      "blockedBalance": 0,
      "rownum": 3,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "noSub",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 0,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "available",
    },
    Object {
      "credit": 0,
      "debit": 0,
      "rownum": 2,
      "subAccountType": "blocked",
    },
    Object {
      "credit": 10000,
      "debit": 0,
      "rownum": 3,
      "subAccountType": "noSub",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal negative balance in available subAccount > return correct balances after negative balance in available subAccount 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 0,
      "creditNew": 10000,
      "debitAmount": 11000,
      "debitNew": 11000,
      "newBalance": -1000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 0,
      "debitAmount": 11000,
      "isCredit": false,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": -1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": -1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 10000,
      "debit": 11000,
      "rownum": 1,
      "subAccountType": "available",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal negative balance in blocked subAccount and main account > return correct balances after negative balance in blocked subAccount and main account 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "journal": Array [],
  "mainBalance": Array [
    Object {
      "actualBalance": 0,
      "availableBalance": 0,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "blocked",
    },
    Object {
      "actualBalance": -1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 0,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "blocked",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal one negative and one positive > return correct balances after one negative and one positive 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "blocked",
      "transferId": null,
    },
    Object {
      "creditAmount": 2000,
      "creditNew": 2000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 2000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 2000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "blocked",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 2000,
      "availableBalance": 2000,
      "availableCredit": 2000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "blocked",
    },
    Object {
      "actualBalance": 1000,
      "availableBalance": -1000,
      "availableCredit": 0,
      "blockedBalance": 2000,
      "rownum": 2,
      "seizableCredit": -1000,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 2000,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "blocked",
    },
  ],
}
`

exports[`test/integration/parallel/ledgerBalance.test.js TAP jobs utLedger.testBalance.getJournalSubAccounts client tests ledgerTest.account.getBalance // Get Journal update check of first customer subAccount > return correct balances 1`] = `
Object {
  "balanceHistory": Array [
    Object {
      "creditAmount": 0,
      "creditNew": 0,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 0,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 10000,
      "creditNew": 10000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 10000,
      "oldBalance": 0,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
    Object {
      "creditAmount": 1000,
      "creditNew": 11000,
      "debitAmount": 0,
      "debitNew": 0,
      "newBalance": 11000,
      "oldBalance": 10000,
      "rownum": 1,
      "subAccountType": "available",
      "transferId": null,
    },
  ],
  "journal": Array [
    Object {
      "creditAmount": 1000,
      "debitAmount": 0,
      "isCredit": true,
      "isReversed": false,
      "rownum": 1,
      "splitId": null,
      "subAccountType": "available",
      "transferId": null,
    },
  ],
  "mainBalance": Array [
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 1,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "available",
    },
    Object {
      "actualBalance": 11000,
      "availableBalance": 11000,
      "availableCredit": 11000,
      "blockedBalance": 0,
      "rownum": 2,
      "seizableCredit": 0,
      "seizedBalance": 0,
      "subAccountType": "main",
    },
  ],
  "ownBalance": Array [
    Object {
      "credit": 11000,
      "debit": 0,
      "rownum": 1,
      "subAccountType": "available",
    },
  ],
}
`
