{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Admin portal backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--adapter",
                "--orchestrator",
                "--adminPortal",
                "--utBrowser.gateway",
                "--utFrontReact.gateway",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utCore.adapter",
                "--utCore.orchestrator",
                "--utCore.gateway",
                "--utAudit.adapter",
                "--utAudit.orchestrator",
                "--utAudit.gateway",
                "--utHistory.adapter",
                "--utHistory.orchestrator",
                "--utHistory.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utUser.gateway",
                "--utCustomer.adapter",
                "--utCustomer.orchestrator",
                "--utCustomer.gateway",
                "--utDocument.adapter",
                "--utDocument.orchestrator",
                "--utDocument.gateway",
                "--utTransfer.adapter",
                "--utTransfer.orchestrator",
                "--utTransfer.gateway",
                "--utRule.adapter",
                "--utRule.orchestrator",
                "--utRule.gateway",
                "--utAgent.adapter",
                "--utAgent.orchestrator",
                "--utAgent.gateway",
                "--utLedger.adapter",
                "--utLedger.orchestrator",
                "--utLedger.gateway",
                "--utBulk.adapter",
                "--utBulk.orchestrator",
                "--utBulk.gateway",
                "--utNotice.adapter",
                "--utNotice.orchestrator",
                "--utNotice.gateway",
                "--utAml.adapter",
                "--utAml.orchestrator",
                "--utAml.gateway",
                "--utReport.adapter",
                "--utReport.orchestrator",
                "--utReport.gateway",
                "--utMirrors.adapter",
                "--utMirrors.gateway",
                "--utBeertag.adapter",
                "--utBeertag.orchestrator",
                "--utBeertag.gateway",
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "Service portal backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--service=service",
                "--adapter",
                "--orchestrator",
                "--servicePortal",
                "--utBrowser.gateway",
                "--utFrontReact.gateway",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utCore.adapter",
                "--utCore.orchestrator",
                "--utCore.gateway",
                "--utAudit.adapter",
                "--utAudit.orchestrator",
                "--utAudit.gateway",
                "--utHistory.adapter",
                "--utHistory.orchestrator",
                "--utHistory.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utUser.gateway",
                "--utCustomer.adapter",
                "--utCustomer.orchestrator",
                "--utCustomer.gateway",
                "--utDocument.adapter",
                "--utDocument.orchestrator",
                "--utDocument.gateway",
                "--utTransfer.adapter",
                "--utTransfer.orchestrator",
                "--utTransfer.gateway",
                "--utRule.adapter",
                "--utRule.orchestrator",
                "--utRule.gateway",
                "--utAgent.adapter",
                "--utAgent.orchestrator",
                "--utAgent.gateway",
                "--utLedger.adapter",
                "--utLedger.orchestrator",
                "--utLedger.gateway",
                "--utBulk.adapter",
                "--utBulk.orchestrator",
                "--utBulk.gateway",
                "--utNotice.adapter",
                "--utNotice.orchestrator",
                "--utNotice.gateway",
                "--utAml.adapter",
                "--utAml.orchestrator",
                "--utAml.gateway",
                "--utReport.gateway",
                "--utMirrors.adapter",
                "--utMirrors.gateway"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "Solution portal backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--service=solution",
                "--adapter",
                "--orchestrator",
                "--solutionPortal",
                "--utBrowser.gateway",
                "--utFrontReact.gateway",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utCore.adapter",
                "--utCore.orchestrator",
                "--utCore.gateway",
                "--utAudit.adapter",
                "--utAudit.orchestrator",
                "--utAudit.gateway",
                "--utHistory.adapter",
                "--utHistory.orchestrator",
                "--utHistory.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utUser.gateway",
                "--utCustomer.adapter",
                "--utCustomer.orchestrator",
                "--utCustomer.gateway",
                "--utDocument.adapter",
                "--utDocument.orchestrator",
                "--utDocument.gateway",
                "--utTransfer.adapter",
                "--utTransfer.orchestrator",
                "--utTransfer.gateway",
                "--utRule.adapter",
                "--utRule.orchestrator",
                "--utRule.gateway",
                "--utAgent.adapter",
                "--utAgent.orchestrator",
                "--utAgent.gateway",
                "--utLedger.adapter",
                "--utLedger.orchestrator",
                "--utLedger.gateway",
                "--utBulk.adapter",
                "--utBulk.orchestrator",
                "--utBulk.gateway",
                "--utNotice.adapter",
                "--utNotice.orchestrator",
                "--utNotice.gateway",
                "--utAml.adapter",
                "--utAml.orchestrator",
                "--utAml.gateway",
                "--utReport.gateway",
                "--utMirrors.adapter",
                "--utMirrors.gateway"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "CMS portal backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--service=cms",
                "--adapter",
                "--orchestrator",
                "--cmsPortal",
                "--utBrowser.gateway",
                "--utFrontReact.gateway",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utCustomer.adapter",
                "--utCustomer.orchestrator",
                "--utCustomer.gateway",
                "--utCore.adapter",
                "--utCore.orchestrator",
                "--utCore.gateway",
                "--utAtm.adapter",
                "--utAtm.orchestrator",
                "--utAtm.gateway",
                "--utCard.adapter",
                "--utCard.orchestrator",
                "--utCard.gateway",
                "--utPos.adapter",
                "--utPos.orchestrator",
                "--utPos.gateway",
                "--utIso.adapter",
                "--utIso.orchestrator",
                "--utIso.gateway",
                "--utTransfer.adapter",
                "--utTransfer.orchestrator",
                "--utTransfer.gateway",
                "--utRule.adapter",
                "--utRule.orchestrator",
                "--utRule.gateway"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "EFT backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--service=eft",
                "--adapter",
                "--eftGateway",
                "--utWallet.adapter",
                "--utWallet.orchestrator",
                "--utWallet.gateway",
                "--utTransfer.adapter",
                "--utTransfer.eft",
                "--utTransfer.gateway",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utUser.gateway",
                "--utAtm.eft",
                "--utAtm.eftGateway",
                "--utPos.eft",
                "--utPos.eftGateway",
                "--utIso.eft",
                "--utIso.eftGateway",
                "--utRule.adapter"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "CTP backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--service=ctp",
                "--utCtpPayshield.adapter",
                "--utCtpPayshield.orchestrator",
                "--utCtpAptra.adapter",
                "--utCtpAptra.orchestrator",
                "--utCtpAptra.gateway",
                "--utCtpIso.adapter",
                "--utCtpIso.orchestrator",
                "--utCtpIso.gateway",
                "--utCtpPos.adapter",
                "--utCtpPos.gateway",
                "--utCtpPan.adapter",
                "--utCtpPan.orchestrator",
                "--utCtpPan.gateway"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "Bot backend",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--sqlStandard.path=${workspaceRoot}/test/seed",
                "--service=bot",
                "--adapter",
                "--utUser.adapter",
                "--utUser.orchestrator",
                "--utCore.adapter",
                "--utCore.orchestrator",
                "--utFulfill.orchestrator",
                "--utFulfill.demo",
                "--utBot.orchestrator",
                "--utBot.adapter",
                "--utBot.gateway",
                "--utBotSim.proxy",
                "--utSkype.adapter",
                "--utSkype.webchat",
                "--utSkype.orchestrator",
                "--utMessenger.adapter",
                "--utMessenger.orchestrator",
                "--utSlack.adapter",
                "--utSlack.orchestrator",
                "--utViber.adapter",
                "--utViber.orchestrator",
                "--utSpeech.adapter",
                "--utSpeech.orchestrator",
                "--utDialogflow.adapter",
                "--utDialogflow.orchestrator",
                "--utNotice.orchestrator",
                "--utNotice.adapter",
                "--utNotice.gateway",
                "--utEmail.adapter"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "Webpack dev server",
            "type": "pwa-node",
            "request": "launch",
            "console": "integratedTerminal",
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": "npm",
            "runtimeArgs": ["run", "start"],
            "skipFiles": ["<node_internals>/**"]
        },
        {
            "name": "Build production portals",
            "type": "pwa-node",
            "request": "launch",
            "console": "integratedTerminal",
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": "npm",
            "runtimeArgs": ["run", "build"],
            "skipFiles": ["<node_internals>/**"]
        },
        {
            "name": "Admin portal server render",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "browser/serverRender",
                "--browser",
                "--utBrowser.browser",
                "--utFrontReact.browser",
                "--utLogin.browser",
                "--utCore.browser",
                "--utAudit.browser",
                "--utHistory.browser",
                "--utUser.browser",
                "--utCustomer.browser",
                "--utDocument.browser",
                "--utTransfer.browser",
                "--utRule.browser",
                "--utAgent.browser",
                "--utLedger.browser",
                "--utBulk.browser",
                "--utNotice.browser",
                "--utAml.browser",
                "--utReport.browser",
                "--utMirrors.browser"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "sourceMaps": true,
            "outputCapture": "std"
        },
        {
            "name": "Integration test create db",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/test/integration/db.test.js",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "console": "externalTerminal",
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "UT_ENV": "test",
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            // "console": "externalTerminal",
            "outputCapture": "std",
            "sourceMaps": false,
            "linux": {
                "console": "integratedTerminal",
                "protocol": "inspector"
            }
        },
        {
            "name": "Integration test",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/test/integration/parallel/${input:parallelTest}",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "UT_ENV": "test",
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "console": "externalTerminal",
            "sourceMaps": false,
            "outputCapture": "std",
            "linux": {
                "console": "integratedTerminal",
                "protocol": "inspector"
            }
        },
        {
            "name": "Integration test snapshot",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/test/integration/parallel/${input:parallelTest}",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "TAP_SNAPSHOT": "1",
                "UT_ENV": "test",
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "console": "integratedTerminal",
            "sourceMaps": false,
            "outputCapture": "std",
            "linux": {
                "protocol": "inspector"
            }
        },
        {
            "name": "Integration test single",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/test/integration/parallel/${input:parallelTest}",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "ut_application_test_run__logLevel": "trace",
                "ut_application_test_run__test__prompt": "1",
                "UT_ENV": "test",
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "console": "integratedTerminal",
            "sourceMaps": false,
            "outputCapture": "std",
            "linux": {
                "protocol": "inspector"
            }
        },
        {
            "name": "Unit test",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/${input:unitTest}",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "UT_ENV": "test",
                "NODE_PATH": "dev"
            },
            "console": "externalTerminal",
            "sourceMaps": false,
            "outputCapture": "std",
            "linux": {
                "console": "integratedTerminal"
            }
        },
        {
            "name": "Unit test snapshot",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/${input:unitTest}",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "UT_ENV": "test",
                "NODE_PATH": "dev",
                "TAP_SNAPSHOT": "1"
            },
            "console": "externalTerminal",
            "sourceMaps": false,
            "outputCapture": "std",
            "linux": {
                "console": "integratedTerminal"
            }
        },
        {
            "name": "DB",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--overlay=db",
                "--run.stop",
                "--sqlStandard.path=${workspaceRoot}/test/seed"
            ],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "console": "externalTerminal",
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/",
                "WHY_IS_NODE_RUNNING": "true"
            },
            // "console": "externalTerminal",
            "outputCapture": "std",
            "sourceMaps": false,
            "linux": {
                "console": "integratedTerminal",
                "protocol": "inspector"
            }
        },
        {
            "name": "Performance",
            "type": "node",
            "request": "launch",
            "linux": {
                "console": "integratedTerminal"
            },
            "console": "externalTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "--cluster.workers=4",
                "--log=false",
                "--utBus.serviceBus.jsonrpc.host=127.0.0.1",
                "--utBus.serviceBus.jsonrpc.port=8090",
                "--utBus.serviceBus.jsonrpc.domain=0",
                "--utLog.streams.udp=0",
                "--service=login",
                "--utLogin.login.expire.access=315360000",
                "--adapter",
                "--orchestrator",
                "--mobileServer",
                "--utLogin.adapter",
                "--utLogin.orchestrator",
                "--utLogin.gateway",
                "--utCustomer.adapter",
                "--utCustomer.orchestrator",
                "--utCustomer.gateway",
                "--utRule.adapter",
                "--utRule.orchestrator",
                "--utRule.gateway",
                "--utTransfer.adapter",
                "--utTransfer.orchestrator",
                "--utTransfer.gateway",
                "--utUser.gateway",
                "--utUser.adapter",
                "--utUser.orchestrator"
            ],
            "runtimeArgs": [
                "--preserve-symlinks",
                "--nolazy",
                "--max_old_space_size=500000"
            ],
            "env": {
                "NODE_PATH": "dev"
            },
            "outputCapture": "std"
        },
        {
            "name": "Install",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "install",
                "--startBrowser"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        },
        {
            "name": "Kustomize",
            "type": "node",
            "request": "launch",
            "console": "integratedTerminal",
            "program": "${workspaceRoot}/index.js",
            "args": [
                "server",
                "kustomize",
                "uat"
            ],
            "runtimeArgs": ["--preserve-symlinks", "--nolazy", "--max_old_space_size=500000"],
            "env": {
                "NODE_PATH": "${workspaceRoot}/dev/"
            },
            "outputCapture": "std"
        }
    ],
    "inputs": [{
        "id": "parallelTest",
        "type": "pickString",
        "description": "Pick parallel test to run",
        "options": [
            "agent.test.js",
            "atm.test.js",
            "audit.test.js",
            "botReport.test.js",
            "bulk.test.js",
            "card.test.js",
            "core.test.js",
            "ctp-aptra.test.js",
            "ctp-iso.test.js",
            "ctp-pan.test.js",
            "ctp-payshield.test.js",
            "ctp-pos.test.js",
            "customer.test.js",
            "dialogFlow.test.js",
            "document.test.js",
            "fulfill.test.js",
            "iso.test.js",
            "ledger.test.js",
            "ledgerBalance.test.js",
            "ledgerMakerChecker.test.js",
            "login.test.js",
            "messenger.test.js",
            "notice.test.js",
            "pos.test.js",
            "skype.test.js",
            "transfer.test.js",
            "user.test.js",
            "userAdd.test.js",
            "userDelete.test.js",
            "userExternal.test.js",
            "userFetch.test.js",
            "userGet.test.js",
            "userRole.test.js",
            "userUpdate.test.js",
            "viber.test.js",
            "wallet.test.js"
        ]
    }]
}